? gdk-pixbuf.pc
? gdk-2.0.pc
? gtk+-2.0.pc
? ansi-c-warnings.diff
? gdk-pixbuf-2.0.pc
? gdk-pixbuf/make-inline-pixbuf
? gtk/stock-icons/Makefile.in
? gtk/stock-icons/gtkstockpixbufs.h
Index: gdk/x11/gdkfont-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkfont-x11.c,v
retrieving revision 1.25
diff -u -u -r1.25 gdkfont-x11.c
--- gdk/x11/gdkfont-x11.c	2000/07/26 11:32:30	1.25
+++ gdk/x11/gdkfont-x11.c	2000/09/30 15:37:37
@@ -171,7 +171,7 @@
     return g_strdup (result);
   else
     return g_strdup ("iso8859-1");
-};
+}
 
 /**
  * gdk_font_from_description:
Index: gdk/x11/gdkgc-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkgc-x11.c,v
retrieving revision 1.10
diff -u -u -r1.10 gdkgc-x11.c
--- gdk/x11/gdkgc-x11.c	2000/07/26 11:32:30	1.10
+++ gdk/x11/gdkgc-x11.c	2000/09/30 15:37:37
@@ -404,7 +404,7 @@
   g_return_if_fail (dash_list != NULL);
 
   XSetDashes (GDK_GC_XDISPLAY (gc), GDK_GC_XGC (gc),
-	      dash_offset, dash_list, n);
+	      dash_offset, (char *) dash_list, n);
 }
 
 static void
Index: gdk/x11/gdkim-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkim-x11.c,v
retrieving revision 1.21
diff -u -u -r1.21 gdkim-x11.c
--- gdk/x11/gdkim-x11.c	2000/07/26 11:32:30	1.21
+++ gdk/x11/gdkim-x11.c	2000/09/30 15:37:38
@@ -1527,7 +1527,7 @@
        * We must copy the string into an area allocated by glib, because
        * the string 'tpr.value' must be freed by XFree().
        */
-      mbstr = g_strdup(tpr.value);
+      mbstr = g_strdup((gchar *) tpr.value);
       XFree (tpr.value);
     }
   else
Index: gdk/x11/gdkmain-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkmain-x11.c,v
retrieving revision 1.120
diff -u -u -r1.120 gdkmain-x11.c
--- gdk/x11/gdkmain-x11.c	2000/07/26 11:32:30	1.120
+++ gdk/x11/gdkmain-x11.c	2000/09/30 15:37:39
@@ -220,6 +220,7 @@
     }
 
   g_assert_not_reached();
+  return 0;
 }
 
 /*
@@ -552,7 +553,7 @@
       XChangeProperty (gdk_display, gdk_leader_window,
 	   	       gdk_atom_intern ("SM_CLIENT_ID", FALSE),
 		       XA_STRING, 8, PropModeReplace,
-		       sm_client_id, strlen(sm_client_id));
+		       (unsigned char *) sm_client_id, strlen(sm_client_id));
     }
   else
      XDeleteProperty (gdk_display, gdk_leader_window,
@@ -746,4 +747,4 @@
   if (upper)
     *upper = xupper;
 }  
-#endif HAVE_XCONVERTCASE
+#endif /* HAVE_XCONVERTCASE */
Index: gdk/x11/gdkpixmap-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkpixmap-x11.c,v
retrieving revision 1.37
diff -u -u -r1.37 gdkpixmap-x11.c
--- gdk/x11/gdkpixmap-x11.c	2000/07/26 11:32:31	1.37
+++ gdk/x11/gdkpixmap-x11.c	2000/09/30 15:37:39
@@ -294,7 +294,7 @@
      the gdk window */
   if (!XGetGeometry(GDK_DISPLAY(),
 		    xpixmap, &root_return,
-		    &x_ret, &y_ret, &w_ret, &h_ret, &bw_ret, &depth_ret))
+		    (int *) &x_ret, (int *) &y_ret, &w_ret, &h_ret, &bw_ret, &depth_ret))
       return NULL;
 
   pixmap = g_object_new (gdk_pixmap_get_type (), NULL);
Index: gdk/x11/gdkwindow-x11.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk/x11/gdkwindow-x11.c,v
retrieving revision 1.97
diff -u -u -r1.97 gdkwindow-x11.c
--- gdk/x11/gdkwindow-x11.c	2000/09/14 16:41:20	1.97
+++ gdk/x11/gdkwindow-x11.c	2000/09/30 15:37:41
@@ -1083,7 +1083,7 @@
       if (role)
 	XChangeProperty (GDK_WINDOW_XDISPLAY (window), GDK_WINDOW_XID (window),
 			 gdk_atom_intern ("WM_WINDOW_ROLE", FALSE), XA_STRING,
-			 8, PropModeReplace, role, strlen (role));
+			 8, PropModeReplace, (unsigned char *) role, strlen (role));
       else
 	XDeleteProperty (GDK_WINDOW_XDISPLAY (window), GDK_WINDOW_XID (window),
 			 gdk_atom_intern ("WM_WINDOW_ROLE", FALSE));
@@ -1706,7 +1706,7 @@
     return;
   
   res = XmbTextListToTextProperty (GDK_WINDOW_XDISPLAY (window),
-				   &name, 1, XStdICCTextStyle,
+				   (char **) &name, 1, XStdICCTextStyle,
                                	   &property);
   if (res < 0)
     {
Index: gdk-pixbuf/gdk-pixbuf-io.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/gdk-pixbuf-io.c,v
retrieving revision 1.44
diff -u -u -r1.44 gdk-pixbuf-io.c
--- gdk-pixbuf/gdk-pixbuf-io.c	2000/07/28 00:16:17	1.44
+++ gdk-pixbuf/gdk-pixbuf-io.c	2000/09/30 15:37:42
@@ -92,7 +92,7 @@
 	if (size < 20)
 		return FALSE;
 
-	if (strncmp (buffer, "GIF8", 4) == 0)
+	if (strncmp ((gchar *) buffer, "GIF8", 4) == 0)
 		return TRUE;
 
 	return FALSE;
@@ -104,7 +104,7 @@
 	if (size < 20)
 		return FALSE;
 
-	if (strncmp (buffer, "/* XPM */", 9) == 0)
+	if (strncmp ((gchar *) buffer, "/* XPM */", 9) == 0)
 		return TRUE;
 
 	return FALSE;
@@ -317,22 +317,22 @@
 	image_module->module = module;
 
 	if (pixbuf_module_symbol (module, name, "image_load", &load_sym))
-		image_module->load = load_sym;
+		image_module->load = (ModuleLoadFunc) load_sym;
 
         if (pixbuf_module_symbol (module, name, "image_load_xpm_data", &load_sym))
-		image_module->load_xpm_data = load_sym;
+		image_module->load_xpm_data = (ModuleLoadXPMDataFunc) load_sym;
 
         if (pixbuf_module_symbol (module, name, "image_begin_load", &load_sym))
-		image_module->begin_load = load_sym;
+		image_module->begin_load = (ModuleBeginLoadFunc) load_sym;
 
         if (pixbuf_module_symbol (module, name, "image_stop_load", &load_sym))
-		image_module->stop_load = load_sym;
+		image_module->stop_load = (ModuleStopLoadFunc) load_sym;
 
         if (pixbuf_module_symbol (module, name, "image_load_increment", &load_sym))
-		image_module->load_increment = load_sym;
+		image_module->load_increment = (ModuleLoadIncrementFunc) load_sym;
 
         if (pixbuf_module_symbol (module, name, "image_load_animation", &load_sym))
-		image_module->load_animation = load_sym;
+		image_module->load_animation = (ModuleLoadAnimationFunc) load_sym;
 }
 #else
 
Index: gdk-pixbuf/gdk-pixbuf-io.h
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/gdk-pixbuf-io.h,v
retrieving revision 1.20
diff -u -u -r1.20 gdk-pixbuf-io.h
--- gdk-pixbuf/gdk-pixbuf-io.h	2000/07/28 00:09:35	1.20
+++ gdk-pixbuf/gdk-pixbuf-io.h	2000/09/30 15:37:42
@@ -49,26 +49,34 @@
 typedef void (* ModuleAnimationDoneNotifyFunc) (GdkPixbuf *pixbuf,
 						gpointer user_data);
 
+typedef GdkPixbuf * (* ModuleLoadFunc) (FILE *f);
+typedef GdkPixbuf * (* ModuleLoadXPMDataFunc) (const char **data);
+typedef gpointer (* ModuleBeginLoadFunc) (ModulePreparedNotifyFunc prepare_func,
+					  ModuleUpdatedNotifyFunc update_func,
+					  ModuleFrameDoneNotifyFunc frame_done_func,
+					  ModuleAnimationDoneNotifyFunc anim_done_func,
+					  gpointer user_data);
+typedef void (* ModuleStopLoadFunc) (gpointer context);
+typedef gboolean (* ModuleLoadIncrementFunc) (gpointer context, const guchar *buf, guint size);
+typedef GdkPixbufAnimation * (* ModuleLoadAnimationFunc) (FILE *f);
+
+
 typedef struct _GdkPixbufModule GdkPixbufModule;
 struct _GdkPixbufModule {
 	char *module_name;
 	gboolean (* format_check) (guchar *buffer, int size);
 	GModule *module;
-	GdkPixbuf *(* load) (FILE *f);
-        GdkPixbuf *(* load_xpm_data) (const char **data);
+	ModuleLoadFunc load;
+	ModuleLoadXPMDataFunc load_xpm_data;
 
         /* Incremental loading */
 
-        gpointer (* begin_load) (ModulePreparedNotifyFunc prepare_func,
-				 ModuleUpdatedNotifyFunc update_func,
-				 ModuleFrameDoneNotifyFunc frame_done_func,
-				 ModuleAnimationDoneNotifyFunc anim_done_func,
-				 gpointer user_data);
-        void (* stop_load) (gpointer context);
-        gboolean (* load_increment) (gpointer context, const guchar *buf, guint size);
+        ModuleBeginLoadFunc begin_load;
+	ModuleStopLoadFunc stop_load;
+	ModuleLoadIncrementFunc load_increment;
 
 	/* Animation loading */
-	GdkPixbufAnimation *(* load_animation) (FILE *f);
+	ModuleLoadAnimationFunc load_animation;
 };
 
 
Index: gdk-pixbuf/gdk-pixbuf-loader.c
===================================================================
RCS file: gdk-pixbuf-loader.c
diff -N gdk-pixbuf-loader.c
--- /dev/null	Tue May  5 16:32:27 1998
+++ gdk-pixbuf-loader.c	Sat Sep 30 11:37:42 2000
@@ -0,0 +1,443 @@
+/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
+
+/* GdkPixbuf library - Main header file
+ *
+ * Copyright (C) 1999 The Free Software Foundation
+ *
+ * Authors: Mark Crichton <crichton@gimp.org>
+ *          Miguel de Icaza <miguel@gnu.org>
+ *          Federico Mena-Quintero <federico@gimp.org>
+ *          Jonathan Blandford <jrb@redhat.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ */
+
+#include <config.h>
+#include <string.h>
+
+#include "gdk-pixbuf-private.h"
+#include "gdk-pixbuf-loader.h"
+#include "gdk-pixbuf-io.h"
+
+
+
+static void gdk_pixbuf_loader_class_init    (GdkPixbufLoaderClass   *klass,
+                                             gpointer                class_data);
+static void gdk_pixbuf_loader_init          (GdkPixbufLoader        *loader,
+                                             GdkPixbufLoaderClass   *klass);
+static void gdk_pixbuf_loader_finalize      (GObject                *loader);
+
+
+
+static gpointer parent_class;
+
+
+
+/* Internal data */
+
+#define LOADER_HEADER_SIZE 128
+
+typedef struct {
+	GdkPixbuf *pixbuf;
+	GdkPixbufAnimation *animation;
+	gboolean closed;
+	guchar header_buf[LOADER_HEADER_SIZE];
+	gint header_buf_offset;
+	GdkPixbufModule *image_module;
+	gpointer context;
+} GdkPixbufLoaderPrivate;
+
+
+
+/**
+ * gdk_pixbuf_loader_get_type:
+ * @void:
+ *
+ * Registers the #GdkPixubfLoader class if necessary, and returns the type ID
+ * associated to it.
+ *
+ * Return value: The type ID of the #GdkPixbufLoader class.
+ **/
+GType
+gdk_pixbuf_loader_get_type (void)
+{
+	static GType loader_type = 0;
+
+	if (!loader_type) {
+		static const GTypeInfo loader_info = {
+			sizeof (GdkPixbufLoaderClass),
+			(GBaseInitFunc) NULL,
+			(GBaseFinalizeFunc) NULL,
+			(GClassInitFunc) gdk_pixbuf_loader_class_init,
+			(GClassFinalizeFunc) NULL,
+			(gpointer) NULL, /* class_data */
+			sizeof (GdkPixbufLoader),
+			0,
+			(GInstanceInitFunc) gdk_pixbuf_loader_init,
+			NULL /* value_table */
+		};
+
+		loader_type = g_type_register_static (G_TYPE_OBJECT,
+						      "GdkPixbufLoader",
+						      &loader_info);
+	}
+
+	return loader_type;
+}
+
+static void
+gdk_pixbuf_loader_class_init (GdkPixbufLoaderClass *klass,
+			      gpointer class_data)
+{
+        GObjectClass *object_class = G_OBJECT_CLASS (klass);
+        
+        parent_class = g_type_class_peek_parent (klass);
+        
+        object_class->finalize = gdk_pixbuf_loader_finalize;
+}
+
+static void
+gdk_pixbuf_loader_init (GdkPixbufLoader *loader,
+			GdkPixbufLoaderClass *klass)
+{
+	GdkPixbufLoaderPrivate *priv;
+
+	priv = g_new0 (GdkPixbufLoaderPrivate, 1);
+	loader->private = priv;
+}
+
+static void
+gdk_pixbuf_loader_finalize (GObject *object)
+{
+	GdkPixbufLoader *loader;
+	GdkPixbufLoaderPrivate *priv = NULL;
+
+	loader = GDK_PIXBUF_LOADER (object);
+	priv = loader->private;
+
+	if (priv) {
+		if (!priv->closed)
+			gdk_pixbuf_loader_close (loader);
+
+		if (priv->animation)
+			gdk_pixbuf_animation_unref (priv->animation);
+		if (priv->pixbuf)
+			gdk_pixbuf_unref (priv->pixbuf);
+
+		g_free (priv);
+	}
+
+        G_OBJECT_CLASS (parent_class)->finalize (object);
+}
+
+static void
+gdk_pixbuf_loader_prepare (GdkPixbuf *pixbuf, gpointer loader)
+{
+	GdkPixbufLoaderPrivate *priv = NULL;
+
+	priv = GDK_PIXBUF_LOADER (loader)->private;
+	gdk_pixbuf_ref (pixbuf);
+	g_assert (priv->pixbuf == NULL);
+
+	priv->pixbuf = pixbuf;
+}
+
+static void
+gdk_pixbuf_loader_update (GdkPixbuf *pixbuf, guint x, guint y, guint width, guint height, gpointer loader)
+{
+	GdkPixbufLoaderPrivate *priv = NULL;
+
+	priv = GDK_PIXBUF_LOADER (loader)->private;
+}
+
+static void
+gdk_pixbuf_loader_frame_done (GdkPixbufFrame *frame, gpointer loader)
+{
+	GdkPixbufLoaderPrivate *priv = NULL;
+
+	priv = GDK_PIXBUF_LOADER (loader)->private;
+
+	priv->pixbuf = NULL;
+
+	if (priv->animation == NULL) {
+		priv->animation = g_object_new (GDK_TYPE_PIXBUF_ANIMATION, NULL);
+		priv->animation->n_frames = 0;
+		priv->animation->width  = gdk_pixbuf_get_width  (frame->pixbuf) + frame->x_offset;
+		priv->animation->height = gdk_pixbuf_get_height (frame->pixbuf) + frame->y_offset;
+	} else {
+		int w, h;
+
+		/* update bbox size */
+		w = gdk_pixbuf_get_width (frame->pixbuf) + frame->x_offset;
+		h = gdk_pixbuf_get_height (frame->pixbuf) + frame->y_offset;
+
+		if (w > priv->animation->width) {
+			priv->animation->width = w;
+		}
+		if (h > priv->animation->height) {
+			priv->animation->height = h;
+		}
+	}
+
+	priv->animation->frames = g_list_append (priv->animation->frames, frame);
+	priv->animation->n_frames ++;
+}
+
+static void
+gdk_pixbuf_loader_animation_done (GdkPixbuf *pixbuf, gpointer loader)
+{
+	GdkPixbufLoaderPrivate *priv = NULL;
+	GdkPixbufFrame    *frame;
+	GList *current = NULL;
+	gint h, w;
+
+	priv = GDK_PIXBUF_LOADER (loader)->private;
+	priv->pixbuf = NULL;
+
+	current = gdk_pixbuf_animation_get_frames (priv->animation);
+
+	while (current) {
+		frame = (GdkPixbufFrame *) current->data;
+
+		/* update bbox size */
+		w = gdk_pixbuf_get_width (frame->pixbuf) + frame->x_offset;
+		h = gdk_pixbuf_get_height (frame->pixbuf) + frame->y_offset;
+
+		if (w > priv->animation->width) {
+			priv->animation->width = w;
+		}
+		if (h > priv->animation->height) {
+			priv->animation->height = h;
+		}
+		current = current->next;
+	}
+}
+
+
+
+/**
+ * gdk_pixbuf_loader_new:
+ *
+ * Creates a new pixbuf loader object.
+ *
+ * Return value: A newly-created pixbuf loader.
+ **/
+GdkPixbufLoader *
+gdk_pixbuf_loader_new (void)
+{
+	return g_object_new (GDK_TYPE_PIXBUF_LOADER, NULL);
+}
+
+static int
+gdk_pixbuf_loader_load_module(GdkPixbufLoader *loader)
+{
+	GdkPixbufLoaderPrivate *priv = loader->private;
+
+	priv->image_module = gdk_pixbuf_get_module (priv->header_buf, priv->header_buf_offset);
+
+	if (priv->image_module == NULL)
+		return 0;
+
+	if (priv->image_module->module == NULL)
+		gdk_pixbuf_load_module (priv->image_module);
+
+	if (priv->image_module->module == NULL)
+		return 0;
+
+	if ((priv->image_module->begin_load == NULL) ||
+	    (priv->image_module->stop_load == NULL) ||
+	    (priv->image_module->load_increment == NULL)) {
+		g_warning ("module %s does not support incremental loading.\n",
+			   priv->image_module->module_name);
+		return 0;
+	}
+
+	priv->context = (*priv->image_module->begin_load) (gdk_pixbuf_loader_prepare,
+							   gdk_pixbuf_loader_update,
+							   gdk_pixbuf_loader_frame_done,
+							   gdk_pixbuf_loader_animation_done,
+							   loader);
+
+	if (priv->context == NULL) {
+		g_warning("Failed to begin progressive load");
+		return 0;
+	}
+
+	if( (* priv->image_module->load_increment) (priv->context, priv->header_buf, priv->header_buf_offset) )
+		return priv->header_buf_offset;
+
+	return 0;
+}
+
+static int
+gdk_pixbuf_loader_eat_header_write (GdkPixbufLoader *loader, const guchar *buf, size_t count)
+{
+	int nbytes;
+	GdkPixbufLoaderPrivate *priv = loader->private;
+
+	nbytes = MIN(LOADER_HEADER_SIZE - priv->header_buf_offset, count);
+	memcpy (priv->header_buf + priv->header_buf_offset, buf, nbytes);
+
+	priv->header_buf_offset += nbytes;
+
+	if(priv->header_buf_offset >= LOADER_HEADER_SIZE) {
+		if (gdk_pixbuf_loader_load_module(loader) == 0)
+			return 0;
+	}
+	return nbytes;
+}
+
+/**
+ * gdk_pixbuf_loader_write:
+ * @loader: A pixbuf loader.
+ * @buf: Pointer to image data.
+ * @count: Length of the @buf buffer in bytes.
+ *
+ * This will cause a pixbuf loader to parse the next @count bytes of an image.
+ * It will return TRUE if the data was loaded successfully, and FALSE if an
+ * error occurred.  In the latter case, the loader will be closed, and will not
+ * accept further writes.
+ *
+ * Return value: #TRUE if the write was successful, or #FALSE if the loader
+ * cannot parse the buffer.
+ **/
+gboolean
+gdk_pixbuf_loader_write (GdkPixbufLoader *loader, const guchar *buf, size_t count)
+{
+	GdkPixbufLoaderPrivate *priv;
+
+	g_return_val_if_fail (loader != NULL, FALSE);
+	g_return_val_if_fail (GDK_IS_PIXBUF_LOADER (loader), FALSE);
+
+	g_return_val_if_fail (buf != NULL, FALSE);
+	g_return_val_if_fail (count >= 0, FALSE);
+
+	priv = loader->private;
+
+	/* we expect it's not to be closed */
+	g_return_val_if_fail (priv->closed == FALSE, FALSE);
+
+	if (priv->image_module == NULL) {
+		int eaten;
+
+		eaten = gdk_pixbuf_loader_eat_header_write(loader, buf, count);
+		if (eaten <= 0)
+			return FALSE;
+
+		count -= eaten;
+		buf += eaten;
+	}
+
+	if (count > 0 && priv->image_module->load_increment)
+		return (* priv->image_module->load_increment) (priv->context, buf, count);
+
+	return TRUE;
+}
+
+/**
+ * gdk_pixbuf_loader_get_pixbuf:
+ * @loader: A pixbuf loader.
+ *
+ * Queries the GdkPixbuf that a pixbuf loader is currently creating.  In general
+ * it only makes sense to call this function afer the "area_prepared" signal has
+ * been emitted by the loader; this means that enough data has been read to know
+ * the size of the image that will be allocated.  If the loader has not received
+ * enough data via gdk_pixbuf_loader_write(), then this function returns NULL.
+ * The returned pixbuf will be the same in all future calls to the loader, so
+ * simply calling gdk_pixbuf_ref() should be sufficient to continue using it.  Additionally,
+ * if the loader is an animation, it will return the first frame of the animation.
+ *
+ * Return value: The GdkPixbuf that the loader is creating, or NULL if not
+ * enough data has been read to determine how to create the image buffer.
+ **/
+GdkPixbuf *
+gdk_pixbuf_loader_get_pixbuf (GdkPixbufLoader *loader)
+{
+	GdkPixbufLoaderPrivate *priv;
+
+	g_return_val_if_fail (loader != NULL, NULL);
+	g_return_val_if_fail (GDK_IS_PIXBUF_LOADER (loader), NULL);
+
+	priv = loader->private;
+
+	if (priv->animation) {
+		GList *list;
+		
+		list = gdk_pixbuf_animation_get_frames (priv->animation);
+		if (list != NULL) {
+			GdkPixbufFrame *frame = list->data;
+
+			return gdk_pixbuf_frame_get_pixbuf (frame);
+		}
+	}
+	return priv->pixbuf;
+}
+
+/**
+ * gdk_pixbuf_loader_get_animation:
+ * @loader: A pixbuf loader
+ *
+ * Queries the GdkPixbufAnimation that a pixbuf loader is currently creating.
+ * In general it only makes sense to call this function afer the "area_prepared"
+ * signal has been emitted by the loader.  If the image is not an animation,
+ * then it will return NULL.
+ *
+ * Return value: The GdkPixbufAnimation that the loader is loading, or NULL if
+ not enough data has been read to determine the information.
+ **/
+GdkPixbufAnimation *
+gdk_pixbuf_loader_get_animation (GdkPixbufLoader *loader)
+{
+	GdkPixbufLoaderPrivate *priv;
+
+	g_return_val_if_fail (loader != NULL, NULL);
+	g_return_val_if_fail (GDK_IS_PIXBUF_LOADER (loader), NULL);
+
+	priv = loader->private;
+
+	return priv->animation;
+}
+
+/**
+ * gdk_pixbuf_loader_close:
+ * @loader: A pixbuf loader.
+ *
+ * Informs a pixbuf loader that no further writes with gdk_pixbuf_load_write()
+ * will occur, so that it can free its internal loading structures.
+ **/
+void
+gdk_pixbuf_loader_close (GdkPixbufLoader *loader)
+{
+	GdkPixbufLoaderPrivate *priv;
+
+	g_return_if_fail (loader != NULL);
+	g_return_if_fail (GDK_IS_PIXBUF_LOADER (loader));
+
+	priv = loader->private;
+
+	/* we expect it's not closed */
+	g_return_if_fail (priv->closed == FALSE);
+
+	/* We have less the 128 bytes in the image.  Flush it, and keep going. */
+	if (priv->image_module == NULL)
+		gdk_pixbuf_loader_load_module (loader);
+
+	if (priv->image_module && priv->image_module->stop_load)
+		(* priv->image_module->stop_load) (priv->context);
+
+	priv->closed = TRUE;
+}
+
Index: gdk-pixbuf/gdk-pixbuf-loader.h
===================================================================
RCS file: gdk-pixbuf-loader.h
diff -N gdk-pixbuf-loader.h
--- /dev/null	Tue May  5 16:32:27 1998
+++ gdk-pixbuf-loader.h	Sat Sep 30 11:37:42 2000
@@ -0,0 +1,76 @@
+/* GdkPixbuf library - Main header file
+ *
+ * Copyright (C) 1999 The Free Software Foundation
+ *
+ * Authors: Mark Crichton <crichton@gimp.org>
+ *          Miguel de Icaza <miguel@gnu.org>
+ *          Federico Mena-Quintero <federico@gimp.org>
+ *          Jonathan Blandford <jrb@redhat.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ */
+
+#ifndef GDK_PIXBUF_LOADER_H
+#define GDK_PIXBUF_LOADER_H
+
+#include <unistd.h>
+#include <gdk-pixbuf/gdk-pixbuf.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+
+
+#define GDK_TYPE_PIXBUF_LOADER		   (gdk_pixbuf_loader_get_type ())
+#define GDK_PIXBUF_LOADER(obj)		   (G_TYPE_CHECK_INSTANCE_CAST ((obj), GDK_TYPE_PIXBUF_LOADER, GdkPixbufLoader))
+#define GDK_PIXBUF_LOADER_CLASS(klass)	   (G_TYPE_CHECK_CLASS_CAST ((klass), GDK_TYPE_PIXBUF_LOADER, GdkPixbufLoaderClass))
+#define GDK_IS_PIXBUF_LOADER(obj)	   (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GDK_TYPE_PIXBUF_LOADER))
+#define GDK_IS_PIXBUF_LOADER_CLASS(klass)  (G_TYPE_CHECK_CLASS_TYPE ((klass), GDK_TYPE_PIXBUF_LOADER))
+
+
+typedef struct _GdkPixbufLoader GdkPixbufLoader;
+struct _GdkPixbufLoader
+{
+	GObject object;
+
+	/* < Private > */
+	gpointer private;
+};
+
+typedef struct _GdkPixbufLoaderClass GdkPixbufLoaderClass;
+struct _GdkPixbufLoaderClass {
+	GObjectClass parent_class;
+};
+
+
+
+GType               gdk_pixbuf_loader_get_type      (void);
+GdkPixbufLoader    *gdk_pixbuf_loader_new           (void);
+gboolean            gdk_pixbuf_loader_write         (GdkPixbufLoader *loader,
+						     const guchar    *buf,
+						     size_t           count);
+GdkPixbuf          *gdk_pixbuf_loader_get_pixbuf    (GdkPixbufLoader *loader);
+GdkPixbufAnimation *gdk_pixbuf_loader_get_animation (GdkPixbufLoader *loader);
+void                gdk_pixbuf_loader_close         (GdkPixbufLoader *loader);
+
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
Index: gdk-pixbuf/io-bmp.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/io-bmp.c,v
retrieving revision 1.18
diff -u -u -r1.18 io-bmp.c
--- gdk-pixbuf/io-bmp.c	2000/08/01 21:43:56	1.18
+++ gdk-pixbuf/io-bmp.c	2000/09/30 15:37:43
@@ -721,7 +721,7 @@
 
 		} else if (context->Compressed) {
 			/* Compression is done 1 byte at a time for now */
-			DoCompressedByte(context, &buf, &size);
+			DoCompressedByte(context, &buf, (gint *) &size);
 
 		} else {
 			/* Uncompressed pixeldata */
Index: gdk-pixbuf/io-gif.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/io-gif.c,v
retrieving revision 1.51
diff -u -u -r1.51 io-gif.c
--- gdk-pixbuf/io-gif.c	2000/07/26 11:32:40	1.51
+++ gdk-pixbuf/io-gif.c	2000/09/30 15:37:44
@@ -88,7 +88,7 @@
 	GIF_LZW_FILL_BUFFER,
 	GIF_LZW_CLEAR_CODE,
 	GIF_GET_LZW,
-	GIF_DONE,
+	GIF_DONE
 };
 
 
Index: gdk-pixbuf/io-jpeg.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/io-jpeg.c,v
retrieving revision 1.31
diff -u -u -r1.31 io-jpeg.c
--- gdk-pixbuf/io-jpeg.c	2000/07/26 11:32:40	1.31
+++ gdk-pixbuf/io-jpeg.c	2000/09/30 15:37:45
@@ -50,7 +50,7 @@
 #include "gdk-pixbuf-private.h"
 #include "gdk-pixbuf-io.h"
 
-#ifndef HAVE_SIGSETJMP
+#if !defined (HAVE_SIGSETJMP) && !defined (sigsetjmp)
 #define sigjmp_buf jmp_buf
 #define sigsetjmp(jb, x) setjmp(jb)
 #define siglongjmp longjmp
Index: gdk-pixbuf/io-pnm.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/io-pnm.c,v
retrieving revision 1.17
diff -u -u -r1.17 io-pnm.c
--- gdk-pixbuf/io-pnm.c	2000/07/26 11:32:41	1.17
+++ gdk-pixbuf/io-pnm.c	2000/09/30 15:37:45
@@ -267,7 +267,7 @@
 		return -1;
 	}
 	
-	*value = strtol (buf, &errptr, 10);
+	*value = strtol ((gchar *) buf, &errptr, 10);
 
 	if (*errptr != '\0') {
 		inbuf->next_byte  = old_next_byte;
Index: gdk-pixbuf/io-wbmp.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/io-wbmp.c,v
retrieving revision 1.6
diff -u -u -r1.6 io-wbmp.c
--- gdk-pixbuf/io-wbmp.c	2000/08/09 02:56:13	1.6
+++ gdk-pixbuf/io-wbmp.c	2000/09/30 15:37:45
@@ -90,7 +90,7 @@
 		length = fread(membuf, 1, 4096, f);
 		if (length > 0)
 		  gdk_pixbuf__wbmp_image_load_increment(State,
-							membuf,
+							(guchar *) membuf,
 							length);
 
 	}
Index: gdk-pixbuf/pixops/timescale.c
===================================================================
RCS file: /cvs/gnome/gtk+/gdk-pixbuf/pixops/timescale.c,v
retrieving revision 1.5
diff -u -u -r1.5 timescale.c
--- gdk-pixbuf/pixops/timescale.c	2000/07/22 23:50:19	1.5
+++ gdk-pixbuf/pixops/timescale.c	2000/09/30 15:37:46
@@ -181,8 +181,8 @@
 		start_timing ();
 		for (i = 0; i < ITERS; i++)
 		  {
-		    pixops_scale (dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
-				  src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
+		    pixops_scale ((guchar *)dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
+				  (guchar *)src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
 				  (double)dest_width / src_width, (double)dest_height / src_height,
 				  filter_level);
 		  }
@@ -193,10 +193,10 @@
 	    start_timing ();
 	    for (i = 0; i < ITERS; i++)
 	      {
-		pixops_composite (dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
-			      src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
-			      (double)dest_width / src_width, (double)dest_height / src_height,
-			      filter_level, 255);
+		pixops_composite ((guchar *)dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
+				  (guchar *)src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
+				  (double)dest_width / src_width, (double)dest_height / src_height,
+				  filter_level, 255);
 	      }
 	    composite_times[src_index][dest_index][filter_level] =
 	      stop_timing ("   composite\t\t", ITERS, dest_height * dest_width);
@@ -204,8 +204,8 @@
 	    start_timing ();
 	    for (i = 0; i < ITERS; i++)
 	      {
-		pixops_composite_color (dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
-					src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
+		pixops_composite_color ((guchar *)dest_buf, 0, 0, dest_width, dest_height, dest_rowstride, dest_channels, dest_has_alpha,
+					(guchar *)src_buf, src_width, src_height, src_rowstride, src_channels, src_has_alpha,
 					(double)dest_width / src_width, (double)dest_height / src_height,
 					filter_level, 255, 0, 0, 16, 0xaaaaaa, 0x555555);
 	      }
Index: gtk/gtkbindings.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkbindings.c,v
retrieving revision 1.21
diff -u -u -r1.21 gtkbindings.c
--- gtk/gtkbindings.c	2000/09/05 12:13:24	1.21
+++ gtk/gtkbindings.c	2000/09/30 15:37:47
@@ -1361,7 +1361,8 @@
   g_scanner_get_next_token (scanner);
   if (scanner->token != G_TOKEN_STRING)
     return G_TOKEN_STRING;
-  gtk_accelerator_parse (scanner->value.v_string, &keyval, &modifiers);
+  gtk_accelerator_parse (scanner->value.v_string, &keyval,
+			 (GdkModifierType *) &modifiers);
   modifiers &= BINDING_MOD_MASK ();
   if (keyval == 0)
     return G_TOKEN_STRING;
Index: gtk/gtkcalendar.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkcalendar.c,v
retrieving revision 1.22
diff -u -u -r1.22 gtkcalendar.c
--- gtk/gtkcalendar.c	2000/09/07 18:07:56	1.22
+++ gtk/gtkcalendar.c	2000/09/30 15:37:49
@@ -214,7 +214,7 @@
   LAST_SIGNAL
 };
 
-static gint gtk_calendar_signals[LAST_SIGNAL] = { 0 };
+static guint gtk_calendar_signals[LAST_SIGNAL] = { 0 };
 
 static GtkWidgetClass *parent_class = NULL;
 
@@ -1760,7 +1760,7 @@
       if (calendar->day[row][6] < 15 && row > 3 && calendar->month == 11)
 	year++;
 
-      g_return_if_fail (week_of_year (&week, &year,		
+      g_return_if_fail (week_of_year ((N_int *) &week, (N_int *) &year,		
 				      ((calendar->day[row][6] < 15 && row > 3 ? 1 : 0)
 				       + calendar->month) % 12 + 1, calendar->day[row][6]));
 
Index: gtk/gtkclipboard.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkclipboard.c,v
retrieving revision 1.1
diff -u -u -r1.1 gtkclipboard.c
--- gtk/gtkclipboard.c	2000/09/14 16:41:19	1.1
+++ gtk/gtkclipboard.c	2000/09/30 15:37:50
@@ -629,7 +629,7 @@
   RequestTextInfo *info = data;
   gchar *result = NULL;
 
-  result = gtk_selection_data_get_text (selection_data);
+  result = (gchar *) gtk_selection_data_get_text (selection_data);
 
   if (!result)
     {
Index: gtk/gtkclipboard.h
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkclipboard.h,v
retrieving revision 1.1
diff -u -u -r1.1 gtkclipboard.h
--- gtk/gtkclipboard.h	2000/09/14 16:41:19	1.1
+++ gtk/gtkclipboard.h	2000/09/30 15:37:50
@@ -84,4 +84,4 @@
 }
 #endif /* __cplusplus */
 
-#endif __GTK_CLIPBOARD_H__
+#endif /* __GTK_CLIPBOARD_H__ */
Index: gtk/gtkclist.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkclist.c,v
retrieving revision 1.175
diff -u -u -r1.175 gtkclist.c
--- gtk/gtkclist.c	2000/08/18 21:32:48	1.175
+++ gtk/gtkclist.c	2000/09/30 15:37:55
@@ -1886,7 +1886,7 @@
   if (GTK_CLIST_ADD_MODE(clist))
     {
       gdk_gc_set_line_attributes (clist->xor_gc, 1, GDK_LINE_ON_OFF_DASH, 0,0);
-      gdk_gc_set_dashes (clist->xor_gc, 0, "\4\4", 2);
+      gdk_gc_set_dashes (clist->xor_gc, 0, (gint8 *) "\4\4", 2);
     }
 }
 
@@ -3648,7 +3648,7 @@
       GTK_CLIST_SET_FLAG (clist, CLIST_ADD_MODE);
       gdk_gc_set_line_attributes (clist->xor_gc, 1,
 				  GDK_LINE_ON_OFF_DASH, 0, 0);
-      gdk_gc_set_dashes (clist->xor_gc, 0, "\4\4", 2);
+      gdk_gc_set_dashes (clist->xor_gc, 0, (gint8 *) "\4\4", 2);
     }
   else
     {
@@ -5179,7 +5179,7 @@
 	{
 	  gdk_gc_set_line_attributes (clist->xor_gc, 1,
 				      GDK_LINE_ON_OFF_DASH, 0, 0);
-	  gdk_gc_set_dashes (clist->xor_gc, 0, "\4\4", 2);
+	  gdk_gc_set_dashes (clist->xor_gc, 0, (gint8 *) "\4\4", 2);
 	}
 
       width = new_column_width (clist, i, &x);
Index: gtk/gtkctree.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkctree.c,v
retrieving revision 1.75
diff -u -u -r1.75 gtkctree.c
--- gtk/gtkctree.c	2000/07/26 11:32:43	1.75
+++ gtk/gtkctree.c	2000/09/30 15:38:00
@@ -707,7 +707,7 @@
     {
       gdk_gc_set_line_attributes (ctree->lines_gc, 1, 
 				  GDK_LINE_ON_OFF_DASH, GDK_CAP_BUTT, GDK_JOIN_MITER);
-      gdk_gc_set_dashes (ctree->lines_gc, 0, "\1\1", 2);
+      gdk_gc_set_dashes (ctree->lines_gc, 0, (gint8 *) "\1\1", 2);
     }
 }
 
@@ -5370,7 +5370,7 @@
 	  if (GTK_WIDGET_REALIZED (ctree))
 	    gdk_gc_set_line_attributes (ctree->lines_gc, 1, 
 					GDK_LINE_ON_OFF_DASH, GDK_CAP_BUTT, GDK_JOIN_MITER);
-	  gdk_gc_set_dashes (ctree->lines_gc, 0, "\1\1", 2);
+	  gdk_gc_set_dashes (ctree->lines_gc, 0, (gint8 *) "\1\1", 2);
 	  break;
 	case GTK_CTREE_LINES_TABBED:
 	  if (GTK_WIDGET_REALIZED (ctree))
Index: gtk/gtkdnd.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkdnd.c,v
retrieving revision 1.53
diff -u -u -r1.53 gtkdnd.c
--- gtk/gtkdnd.c	2000/07/26 11:32:43	1.53
+++ gtk/gtkdnd.c	2000/09/30 15:38:02
@@ -339,11 +339,11 @@
   GdkCursor    *cursor;
 } drag_cursors[] = {
   { GDK_ACTION_DEFAULT, 0 },
-  { GDK_ACTION_ASK,   action_ask_bits,  action_ask_mask_bits,  NULL },
-  { GDK_ACTION_COPY,  action_copy_bits, action_copy_mask_bits, NULL },
-  { GDK_ACTION_MOVE,  action_move_bits, action_move_mask_bits, NULL },
-  { GDK_ACTION_LINK,  action_link_bits, action_link_mask_bits, NULL },
-  { 0              ,  action_none_bits, action_none_mask_bits, NULL },
+  { GDK_ACTION_ASK,   (const char *) action_ask_bits,  (const char *) action_ask_mask_bits,  NULL },
+  { GDK_ACTION_COPY,  (const char *) action_copy_bits, (const char *) action_copy_mask_bits, NULL },
+  { GDK_ACTION_MOVE,  (const char *) action_move_bits, (const char *) action_move_mask_bits, NULL },
+  { GDK_ACTION_LINK,  (const char *) action_link_bits, (const char *) action_link_mask_bits, NULL },
+  { 0              ,  (const char *) action_none_bits, (const char *) action_none_mask_bits, NULL },
 };
 
 static const gint n_drag_cursors = sizeof (drag_cursors) / sizeof (drag_cursors[0]);
Index: gtk/gtkenums.h
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkenums.h,v
retrieving revision 1.29
diff -u -u -r1.29 gtkenums.h
--- gtk/gtkenums.h	2000/09/14 16:41:19	1.29
+++ gtk/gtkenums.h	2000/09/30 15:38:02
@@ -76,7 +76,7 @@
   GTK_DELETE_DISPLAY_LINE_ENDS,
   GTK_DELETE_PARAGRAPH_ENDS,      /* like C-k in Emacs (or its reverse) */
   GTK_DELETE_PARAGRAPHS,          /* C-k in pico, kill whole line */
-  GTK_DELETE_WHITESPACE,          /* M-\ in Emacs */
+  GTK_DELETE_WHITESPACE           /* M-\ in Emacs */
 } GtkDeleteType;
 
 /* Focus movement types */
Index: gtk/gtkhandlebox.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkhandlebox.c,v
retrieving revision 1.69
diff -u -u -r1.69 gtkhandlebox.c
--- gtk/gtkhandlebox.c	2000/07/26 11:32:44	1.69
+++ gtk/gtkhandlebox.c	2000/09/30 15:38:03
@@ -753,7 +753,7 @@
   bin = GTK_BIN (widget);
   hb = GTK_HANDLE_BOX (widget);
 
-  gdk_window_get_size (hb->bin_window, &width, &height);
+  gdk_window_get_size (hb->bin_window, (gint *) &width, (gint *) &height);
   
   if (!event)
    gtk_paint_box(widget->style,
Index: gtk/gtkimcontextsimple.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkimcontextsimple.c,v
retrieving revision 1.4
diff -u -u -r1.4 gtkimcontextsimple.c
--- gtk/gtkimcontextsimple.c	2000/07/26 11:32:44	1.4
+++ gtk/gtkimcontextsimple.c	2000/09/30 15:38:05
@@ -21,6 +21,8 @@
 #include "gtksignal.h"
 #include "gtkimcontextsimple.h"
 
+#include <stdlib.h>
+
 typedef struct _GtkComposeSeq GtkComposeSeq;
 
 struct _GtkComposeSeq
Index: gtk/gtkitemfactory.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkitemfactory.c,v
retrieving revision 1.31
diff -u -u -r1.31 gtkitemfactory.c
--- gtk/gtkitemfactory.c	2000/07/26 11:32:44	1.31
+++ gtk/gtkitemfactory.c	2000/09/30 15:38:06
@@ -547,7 +547,7 @@
   gtk_object_set_data_by_id (GTK_OBJECT (widget), quark_action, GUINT_TO_POINTER (callback_action));
   gtk_object_set_data_by_id (GTK_OBJECT (widget), quark_item_factory, ifactory);
   if (accelerator)
-    gtk_accelerator_parse (accelerator, &keyval, &mods);
+    gtk_accelerator_parse (accelerator, &keyval, (GdkModifierType * ) &mods);
   else
     {
       keyval = 0;
@@ -1528,7 +1528,7 @@
       old_mods = item->accelerator_mods;
       gtk_accelerator_parse (scanner->value.v_string,
 			     &item->accelerator_key,
-			     &item->accelerator_mods);
+			     (GdkModifierType * ) &item->accelerator_mods);
       if (old_keyval != item->accelerator_key ||
 	  old_mods != item->accelerator_mods)
 	{
@@ -1556,7 +1556,7 @@
     {
       guint (*parser_func) (GScanner*, GtkItemFactoryClass*);
 
-      parser_func = scanner->value.v_symbol;
+      parser_func = (guint (*) (GScanner *, GtkItemFactoryClass*)) scanner->value.v_symbol;
 
       /* check whether this is a GtkItemFactory symbol.
        */
@@ -1624,7 +1624,7 @@
 
   saved_symbol = g_scanner_lookup_symbol (scanner, "menu-path");
   g_scanner_remove_symbol (scanner, "menu-path");
-  g_scanner_add_symbol (scanner, "menu-path", gtk_item_factory_parse_menu_path);
+  g_scanner_add_symbol (scanner, "menu-path", (gpointer) gtk_item_factory_parse_menu_path);
 
   g_scanner_peek_next_token (scanner);
 
Index: gtk/gtkmain.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkmain.c,v
retrieving revision 1.138
diff -u -u -r1.138 gtkmain.c
--- gtk/gtkmain.c	2000/09/14 16:41:19	1.138
+++ gtk/gtkmain.c	2000/09/30 15:38:07
@@ -218,7 +218,7 @@
   if (env_string != NULL)
     {
       gtk_debug_flags = g_parse_debug_string (env_string,
-					      gtk_debug_keys,
+					      (GDebugKey *) gtk_debug_keys,
 					      gtk_ndebug_keys);
       env_string = NULL;
     }
@@ -287,13 +287,13 @@
 	      if (equal_pos != NULL)
 		{
 		  gtk_debug_flags |= g_parse_debug_string (equal_pos+1,
-							   gtk_debug_keys,
+							   (GDebugKey * ) gtk_debug_keys,
 							   gtk_ndebug_keys);
 		}
 	      else if ((i + 1) < *argc && (*argv)[i + 1])
 		{
 		  gtk_debug_flags |= g_parse_debug_string ((*argv)[i+1],
-							   gtk_debug_keys,
+							   (GDebugKey * ) gtk_debug_keys,
 							   gtk_ndebug_keys);
 		  (*argv)[i] = NULL;
 		  i += 1;
@@ -308,13 +308,13 @@
 	      if (equal_pos != NULL)
 		{
 		  gtk_debug_flags &= ~g_parse_debug_string (equal_pos+1,
-							    gtk_debug_keys,
+							    (GDebugKey * ) gtk_debug_keys,
 							    gtk_ndebug_keys);
 		}
 	      else if ((i + 1) < *argc && (*argv)[i + 1])
 		{
 		  gtk_debug_flags &= ~g_parse_debug_string ((*argv)[i+1],
-							    gtk_debug_keys,
+							    (GDebugKey * ) gtk_debug_keys,
 							    gtk_ndebug_keys);
 		  (*argv)[i] = NULL;
 		  i += 1;
@@ -369,10 +369,10 @@
 	      g_module_symbol (module, "gtk_module_init", (gpointer*) &modinit_func) &&
 	      modinit_func)
 	    {
-	      if (!g_slist_find (gtk_modules, modinit_func))
+	      if (!g_slist_find (gtk_modules, (gpointer) modinit_func))
 		{
 		  g_module_make_resident (module);
-		  slist->data = modinit_func;
+		  slist->data = (gpointer) modinit_func;
 		}
 	      else
 		{
@@ -435,7 +435,7 @@
 	{
 	  GtkModuleInitFunc modinit;
 	  
-	  modinit = slist->data;
+	  modinit = (GtkModuleInitFunc) slist->data;
 	  modinit (argc, argv);
 	}
     }
Index: gtk/gtkmenufactory.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkmenufactory.c,v
retrieving revision 1.11
diff -u -u -r1.11 gtkmenufactory.c
--- gtk/gtkmenufactory.c	2000/07/26 11:32:45	1.11
+++ gtk/gtkmenufactory.c	2000/09/30 15:38:08
@@ -263,7 +263,7 @@
 	    {
 	      gtk_accelerator_parse (entry->accelerator,
 				     &accelerator_key,
-				     &accelerator_mods);
+				     (GdkModifierType *) &accelerator_mods);
 	      if (!factory->accel_group)
 		factory->accel_group = gtk_accel_group_new ();
 	      
Index: gtk/gtkprivate.h
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkprivate.h,v
retrieving revision 1.20
diff -u -u -r1.20 gtkprivate.h
--- gtk/gtkprivate.h	2000/07/26 11:32:45	1.20
+++ gtk/gtkprivate.h	2000/09/30 15:38:08
@@ -48,7 +48,7 @@
   PRIVATE_GTK_HAS_SHAPE_MASK	= 1 <<  5,
   PRIVATE_GTK_IN_REPARENT       = 1 <<  6,
   PRIVATE_GTK_DIRECTION_SET     = 1 <<  7,   /* If the reading direction is not DIR_NONE */
-  PRIVATE_GTK_DIRECTION_LTR     = 1 <<  8,   /* If the reading direction is DIR_LTR */
+  PRIVATE_GTK_DIRECTION_LTR     = 1 <<  8    /* If the reading direction is DIR_LTR */
 } GtkPrivateFlags;
 
 /* Macros for extracting a widgets private_flags from GtkWidget.
Index: gtk/gtkrc.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkrc.c,v
retrieving revision 1.65
diff -u -u -r1.65 gtkrc.c
--- gtk/gtkrc.c	2000/09/26 20:22:13	1.65
+++ gtk/gtkrc.c	2000/09/30 15:38:10
@@ -26,9 +26,6 @@
 
 #include "config.h"
 
-#include "glib.h"
-#include "gdkconfig.h"
-
 #ifdef GDK_WINDOWING_X11
 #include <X11/Xlocale.h>	/* so we get the right setlocale */
 #else
@@ -46,6 +43,9 @@
 #include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
+
+#include "glib.h"
+#include "gdkconfig.h"
 
 #ifndef HAVE_LSTAT
 #define lstat stat
Index: gtk/gtkselection.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkselection.c,v
retrieving revision 1.35
diff -u -u -r1.35 gtkselection.c
--- gtk/gtkselection.c	2000/09/14 16:41:19	1.35
+++ gtk/gtkselection.c	2000/09/30 15:38:12
@@ -752,7 +752,7 @@
       if (length < 0)
 	selection_data->data = NULL;
       else
-	selection_data->data = g_strdup("");
+	selection_data->data = (guchar *) g_strdup("");
     }
   
   selection_data->length = length;
@@ -795,18 +795,18 @@
     {
       gtk_selection_data_set (selection_data,
 			      utf8_atom,
-			      8, (guchar *)str, strlen (str));
+			      8, (guchar *)str, strlen ((gchar *) str));
       return TRUE;
     }
   else if (selection_data->target == GDK_TARGET_STRING)
     {
-      gchar *latin1 = gdk_utf8_to_string_target (str);
+      gchar *latin1 = gdk_utf8_to_string_target ((gchar *) str);
 
       if (latin1)
 	{
 	  gtk_selection_data_set (selection_data,
 				  GDK_SELECTION_TYPE_STRING,
-				  8, latin1, strlen (latin1));
+				  8, (guchar *) latin1, strlen (latin1));
 	  g_free(latin1);
 	  
 	  return TRUE;
@@ -821,7 +821,7 @@
       gint format;
       gint new_length;
       
-      if (gdk_utf8_to_compound_text (str, &encoding, &format, &text, &new_length))
+      if (gdk_utf8_to_compound_text ((gchar *) str, &encoding, &format, &text, &new_length))
 	{
 	  gtk_selection_data_set (selection_data, encoding, format, text, new_length);
 	  gdk_free_compound_text (text);
@@ -864,7 +864,7 @@
 						   selection_data->length,
 						   &list);
       if (count > 0)
-	result = list[0];
+	result = (guchar *) list[0];
 
       for (i = 1; i < count; i++)
 	g_free (list[i]);
Index: gtk/gtksignal.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtksignal.c,v
retrieving revision 1.63
diff -u -u -r1.63 gtksignal.c
--- gtk/gtksignal.c	2000/07/26 11:32:48	1.63
+++ gtk/gtksignal.c	2000/09/30 15:38:13
@@ -1673,7 +1673,7 @@
 
   hook = g_hook_alloc (signal->hook_list);
   hook->data = data;
-  hook->func = hook_func;
+  hook->func = (gpointer) hook_func;
   hook->destroy = destroy;
 
   signal->hook_list->seq_id = seq_hook_id;
@@ -1706,7 +1706,7 @@
   GtkEmissionHookData *data = data_p;
   GtkEmissionHook func;
 
-  func = hook->func;
+  func = (GtkEmissionHook) hook->func;
 
   if (!GTK_OBJECT_DESTROYED (data->object))
     return func (data->object, data->signal_id,
Index: gtk/gtkstyle.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkstyle.c,v
retrieving revision 1.43
diff -u -u -r1.43 gtkstyle.c
--- gtk/gtkstyle.c	2000/09/26 20:22:13	1.43
+++ gtk/gtkstyle.c	2000/09/30 15:38:15
@@ -3270,7 +3270,7 @@
   if (detail && !strcmp (detail, "add-mode"))
     {
       gdk_gc_set_line_attributes (style->black_gc, 1, GDK_LINE_ON_OFF_DASH, 0, 0);
-      gdk_gc_set_dashes (style->black_gc, 0, "\4\4", 2);
+      gdk_gc_set_dashes (style->black_gc, 0, (gint8 *) "\4\4", 2);
       
       gdk_draw_rectangle (window,
                           style->black_gc, FALSE,
Index: gtk/gtktext.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtktext.c,v
retrieving revision 1.83
diff -u -u -r1.83 gtktext.c
--- gtk/gtktext.c	2000/07/26 11:32:54	1.83
+++ gtk/gtktext.c	2000/09/30 15:38:20
@@ -1190,7 +1190,7 @@
       guchar ch;
       ch = text->text.ch[end_pos];
       text->text.ch[end_pos] = 0;
-      retval = g_strdup (text->text.ch + start_pos);
+      retval = g_strdup ((gchar *) text->text.ch + start_pos);
       text->text.ch[end_pos] = ch;
     }
 
@@ -5028,14 +5028,14 @@
 						 buffer.wc, len);
 	      else
 	      pixel_width = gdk_text_width (gc_values.font,
-					      buffer.ch, len);
+					      (const gchar *) buffer.ch, len);
 	    }
 	  else
 	    {
 	      if (text->use_wchar)
 		pixel_width = gdk_text_width_wc (font, buffer.wc, len);
 	      else
-		pixel_width = gdk_text_width (font, buffer.ch, len);
+		pixel_width = gdk_text_width (font, (const gchar *) buffer.ch, len);
 	    }
 	  
 	  draw_bg_rect (text, &mark, running_offset, pixel_start_height,
@@ -5067,7 +5067,7 @@
 			   fg_gc,
 			   running_offset,
 			   pixel_height,
-			   buffer.ch,
+			   (const gchar *) buffer.ch,
 			   len);
 	  
 	  running_offset += pixel_width;
Index: gtk/gtktextbuffer.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtktextbuffer.c,v
retrieving revision 1.10
diff -u -u -r1.10 gtktextbuffer.c
--- gtk/gtktextbuffer.c	2000/09/30 00:17:22	1.10
+++ gtk/gtktextbuffer.c	2000/09/30 15:38:21
@@ -1362,7 +1362,7 @@
     {
       /* Extract the selected text */
       str = gtk_text_iter_get_visible_text(&start, &end);
-      gtk_selection_data_set_text (selection_data, str);
+      gtk_selection_data_set_text (selection_data, (guchar *) str);
       g_free (str);
     }
 }
Index: gtk/gtktextview.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtktextview.c,v
retrieving revision 1.18
diff -u -u -r1.18 gtktextview.c
--- gtk/gtktextview.c	2000/09/30 00:17:22	1.18
+++ gtk/gtktextview.c	2000/09/30 15:38:25
@@ -3031,7 +3031,7 @@
 
   if (str)
     {
-      gtk_selection_data_set_text (selection_data, str);
+      gtk_selection_data_set_text (selection_data, (guchar *) str);
       g_free (str);
     }
 }
@@ -3185,7 +3185,7 @@
                                     &drop_point,
                                     drag_target_mark);
 
-  str = gtk_selection_data_get_text (selection_data);
+  str = (gchar *) gtk_selection_data_get_text (selection_data);
 
   if (str)
     {
Index: gtk/gtktypeutils.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtktypeutils.c,v
retrieving revision 1.60
diff -u -u -r1.60 gtktypeutils.c
--- gtk/gtktypeutils.c	2000/07/26 11:32:57	1.60
+++ gtk/gtktypeutils.c	2000/09/30 15:38:25
@@ -148,7 +148,7 @@
 
       initialized = TRUE;
 
-      glib_debug_objects = gtk_debug_flags & GTK_DEBUG_OBJECTS != 0;
+      glib_debug_objects = (gtk_debug_flags & GTK_DEBUG_OBJECTS) != 0;
       
       /* initialize GLib type system
        */
Index: gtk/gtkwidget.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkwidget.c,v
retrieving revision 1.175
diff -u -u -r1.175 gtkwidget.c
--- gtk/gtkwidget.c	2000/09/26 20:22:13	1.175
+++ gtk/gtkwidget.c	2000/09/30 15:38:28
@@ -169,6 +169,17 @@
 						  GtkTextDirection   previous_direction);
 static void gtk_widget_real_grab_focus           (GtkWidget         *focus_widget);
 
+static gint gtk_widget_real_add_accelerator      (GtkWidget         *widget,
+						  guint              accel_signal_id,
+						  GtkAccelGroup     *accel_group,
+						  guint              accel_key,
+						  GdkModifierType    accel_mods,
+						  GtkAccelFlags      accel_flags);
+static void gtk_widget_real_remove_accelerator   (GtkWidget          *widget,
+						  GtkAccelGroup      *accel_group,
+						  guint               accel_key,
+						  GdkModifierType     accel_mods);
+
 static GdkColormap*  gtk_widget_peek_colormap      (void);
 static GtkStyle*     gtk_widget_peek_style         (void);
 static PangoContext *gtk_widget_peek_pango_context (GtkWidget *widget);
@@ -299,8 +310,8 @@
   klass->parent_set = NULL;
   klass->style_set = gtk_widget_style_set;
   klass->direction_changed = gtk_widget_direction_changed;
-  klass->add_accelerator = (void*) gtk_accel_group_handle_add;
-  klass->remove_accelerator = (void*) gtk_accel_group_handle_remove;
+  klass->add_accelerator = gtk_widget_real_add_accelerator;
+  klass->remove_accelerator = gtk_widget_real_remove_accelerator;
   klass->grab_focus = gtk_widget_real_grab_focus;
   klass->event = NULL;
   klass->button_press_event = NULL;
@@ -4907,4 +4918,30 @@
       *path_p = g_strdup (rev_path);
       g_strreverse (*path_p);
     }
+}
+
+static gint
+gtk_widget_real_add_accelerator (GtkWidget *widget, guint accel_signal_id,
+				 GtkAccelGroup *accel_group, guint accel_key,
+				 GdkModifierType accel_mods, GtkAccelFlags accel_flags)
+
+{
+    g_return_val_if_fail (widget != NULL, 0);
+    g_return_val_if_fail (GTK_IS_OBJECT (widget), 0);
+
+    gtk_accel_group_handle_add (GTK_OBJECT (widget), accel_signal_id,
+				accel_group, accel_key, accel_mods, accel_flags);
+
+    return 0;
+}
+
+static void
+gtk_widget_real_remove_accelerator (GtkWidget *widget, GtkAccelGroup *accel_group,
+				    guint accel_key, GdkModifierType accel_mods)
+{
+    g_return_if_fail (widget != NULL);
+    g_return_if_fail (GTK_IS_OBJECT (widget));
+
+    gtk_accel_group_handle_remove (GTK_OBJECT (widget), accel_group,
+				   accel_key, accel_mods);
 }
Index: gtk/gtkwindow.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/gtkwindow.c,v
retrieving revision 1.87
diff -u -u -r1.87 gtkwindow.c
--- gtk/gtkwindow.c	2000/09/03 05:49:33	1.87
+++ gtk/gtkwindow.c	2000/09/30 15:38:30
@@ -920,7 +920,7 @@
       gtk_window_constrain_size (window,
 				 &new_geometry, new_flags,
 				 width, height,
-				 &width, &height);
+				 (gint *) &width, (gint *) &height);
 
       /* and allocate the window */
       allocation.width  = width;
@@ -1572,7 +1572,7 @@
   saved_last_info = info->last;
 
   gtk_widget_size_request (widget, NULL);
-  gtk_window_compute_default_size (window, &new_width, &new_height);
+  gtk_window_compute_default_size (window, (guint *) &new_width, (guint *) &new_height);
   
   if (info->last.width < 0 ||
       info->last.width != new_width ||
Index: gtk/testcalendar.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/testcalendar.c,v
retrieving revision 1.2
diff -u -u -r1.2 testcalendar.c
--- gtk/testcalendar.c	2000/06/02 03:14:07	1.2
+++ gtk/testcalendar.c	2000/09/30 15:38:31
@@ -60,7 +60,7 @@
 
   memset (&tm, 0, sizeof (tm));
   gtk_calendar_get_date (GTK_CALENDAR(data->window),
-			 &tm.tm_year, &tm.tm_mon, &tm.tm_mday);
+			 (guint *) &tm.tm_year, (guint *) &tm.tm_mon, (guint *) &tm.tm_mday);
   tm.tm_year -= TM_YEAR_BASE;
   time = mktime(&tm);
   strftime (buffer, buff_len-1, "%x", gmtime(&time));
@@ -108,7 +108,7 @@
 
   memset (&tm, 0, sizeof (tm));
   gtk_calendar_get_date (GTK_CALENDAR(data->window),
-			 &tm.tm_year, &tm.tm_mon, &tm.tm_mday);
+			 (guint *) &tm.tm_year, (guint *) &tm.tm_mon, (guint *) &tm.tm_mday);
   tm.tm_year -= TM_YEAR_BASE;
 
   if(GTK_CALENDAR(data->window)->marked_date[tm.tm_mday-1] == 0) {
Index: gtk/testdnd.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/testdnd.c,v
retrieving revision 1.8
diff -u -u -r1.8 testdnd.c
--- gtk/testdnd.c	2000/05/12 15:25:50	1.8
+++ gtk/testdnd.c	2000/09/30 15:38:31
@@ -393,7 +393,7 @@
   else
     gtk_selection_data_set (selection_data,
 			    selection_data->target,
-			    8, "I'm Data!", 9);
+			    8, (guchar *) "I'm Data!", 9);
 }
   
 /* The following is a rather elaborate example demonstrating/testing
Index: gtk/testgtk.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/testgtk.c,v
retrieving revision 1.193
diff -u -u -r1.193 testgtk.c
--- gtk/testgtk.c	2000/09/07 18:07:57	1.193
+++ gtk/testgtk.c	2000/09/30 15:38:38
@@ -6913,7 +6913,7 @@
       gtk_widget_realize (window);
       
       circles = gdk_bitmap_create_from_data (window->window,
-					     circles_bits,
+					     (const gchar *) circles_bits,
 					     circles_width,
 					     circles_height);
       gdk_window_set_icon (window->window, NULL,
Index: gtk/testtext.c
===================================================================
RCS file: /cvs/gnome/gtk+/gtk/testtext.c,v
retrieving revision 1.12
diff -u -u -r1.12 testtext.c
--- gtk/testtext.c	2000/09/30 00:17:22	1.12
+++ gtk/testtext.c	2000/09/30 15:38:39
@@ -91,7 +91,7 @@
 static void
 filesel_ok_cb (GtkWidget *button, GtkWidget *filesel)
 {
-  FileselOKFunc ok_func = gtk_object_get_data (GTK_OBJECT (filesel), "ok-func");
+  FileselOKFunc ok_func = (FileselOKFunc) gtk_object_get_data (GTK_OBJECT (filesel), "ok-func");
   gpointer data = gtk_object_get_data (GTK_OBJECT (filesel), "ok-data");
   gint *result = gtk_object_get_data (GTK_OBJECT (filesel), "ok-result");
   
@@ -126,7 +126,7 @@
     gtk_file_selection_set_filename (GTK_FILE_SELECTION (filesel), start_file);
 
   
-  gtk_object_set_data (GTK_OBJECT (filesel), "ok-func", func);
+  gtk_object_set_data (GTK_OBJECT (filesel), "ok-func", (gpointer) func);
   gtk_object_set_data (GTK_OBJECT (filesel), "ok-data", data);
   gtk_object_set_data (GTK_OBJECT (filesel), "ok-result", &result);
 
