dnl
dnl Configure script for GemVT
dnl
AC_INIT(acconfig.h)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gemvt, 0.1.0)

dnl Support porgram name conversion.
AC_ARG_PROGRAM

dnl Disable automatic maintainer mode.
AM_MAINTAINER_MODE

dnl Make sure else configure stuff exists.
AC_CANONICAL_HOST

dnl Additional arguments.
AC_ARG_ENABLE(debug,
[  --enable-debug          turn on debugging [default=no]])
  
dnl Define package requirements.
AC_DEFUN(AC_GEMVT_REQUIREMENTS,
[
	saved_cflags="$CFLAGS"
	saved_ldflags="$LDFLAGS"
	CFLAGS="$X_CFLAGS"
	LDFLAGS="$X_LDFLAGS $X_LIBS"

	dnl Checks for libraries. 
	AC_CHECK_LIB(X11, XOpenDisplay,
		x_libs="-lX11 $X_EXTRA_LIBS",
		[AC_MSG_ERROR(No X11 installed)],
		$X_EXTRA_LIBS)

	LDFLAGS="$saved_ldflags $X_LDFLAGS $X_LIBS"
	AC_CHECK_LIB(gtk, gtk_init,
		X_LIBS="$X_LIBS -lgtk -lgdk -lglib $x_libs -lm",
		[AC_MSG_ERROR(Can not link with gtk/gdk/glib)],
		-lgdk -lglib $x_libs -lm)
	
	dnl Check for functions.
	AC_CHECK_FUNC(putenv,,[AC_MSG_ERROR(Can not set environment variables)])

	CFLAGS="$saved_cflags"
	LDFLAGS="$saved_ldflags"
])
AC_DEFUN(AC_GTKTERM_REQUIREMENTS,
[
])
AC_DEFUN(AC_GTKLED_REQUIREMENTS,
[
])
AC_DEFUN(AC_GTKVTEMU_REQUIREMENTS,
[
])
AC_DEFUN(AC_GTKVT102_REQUIREMENTS,
[
	dnl Check for 'linux' entry in termcap.
	AC_MSG_CHECKING(for terminal type \"linux\" in /etc/termcap)
	if grep -i '^\([^      ]\+|\)*linux|' /etc/termcap >/dev/null 2>/dev/null; then
		AC_DEFINE(HAVE_TERMCAP_LINUX)
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
])
AC_DEFUN(AC_GTKTTY_REQUIREMENTS,
[
	dnl Checks for header files.
	AC_HEADER_SYS_WAIT
	AC_CHECK_HEADERS(fcntl.h sys/ioctl.h unistd.h)

	dnl Check for required functions.
	AC_CHECK_FUNC(wait4,,[AC_MSG_ERROR(Can not wait for process termination)])
	AC_CHECK_FUNC(tcgetattr,,[AC_MSG_ERROR(Can not access terminal attributes)])
	AC_CHECK_FUNC(putenv,,[AC_MSG_ERROR(Can not set environment variables)])

	dnl Check for optional functions.
	AC_CHECK_FUNCS(getdtablesize)
	AC_CHECK_FUNCS(getrlimit)
	
	dnl Type checks.
	AC_TYPE_SIGNAL
])

dnl Checks for compiler characteristics, header files, typedefs and structures.
AC_PROG_CC
AC_PROG_CPP
AC_C_CONST
AC_PROG_GCC_TRADITIONAL
AC_C_INLINE
AC_HEADER_STDC

dnl Setup CFLAGS.
if eval "test is_$enable_debug = is_yes"; then
  if echo "$CFLAGS" | grep "\-g" >/dev/null 2>/dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -g"
  fi
fi
if eval "test is_$GCC = is_yes"; then
  if echo "$CFLAGS" | grep "\-pipe" >/dev/null 2>/dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -pipe"
  fi

  if echo "$CFLAGS" | grep "\-Wall" >/dev/null 2>/dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -Wall"
  fi

  if echo "$CFLAGS" | grep "\-Wmissing-prototypes" >/dev/null 2>/dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -Wmissing-prototypes"
  fi

  if echo "$CFLAGS" | grep "\-Wstrict-prototypes" >/dev/null 2>/dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -Wstrict-prototypes"
  fi

  if eval "test is_$enable_ansi = is_yes"; then
    if echo "$CFLAGS" | grep "\-ansi" >/dev/null 2>/dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -ansi"
    fi

    if echo "$CFLAGS" | grep "\-pedantic" >/dev/null 2>/dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -pedantic"
    fi
  fi
fi

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LIBTOOL

dnl Check for package requirements.
AC_PATH_X
AC_PATH_XTRA
if eval "test is_$no_x = is_yes"; then
	AC_MSG_ERROR(The X Window System is required)
fi
AC_GEMVT_REQUIREMENTS
AC_GTKLED_REQUIREMENTS
AC_GTKTERM_REQUIREMENTS
AC_GTKTTY_REQUIREMENTS
AC_GTKVTEMU_REQUIREMENTS
AC_GTKVT102_REQUIREMENTS

dnl @SOMETHING@ variable exports.
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl Create files.
AC_OUTPUT([
Makefile 
])
