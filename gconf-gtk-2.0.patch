? gconf.m4
? gconf.spec
? gconf/gconfd-1
? gconf/gconfd.oafinfo
? gconf/gconftool-1
Index: configure.in
===================================================================
RCS file: /cvs/gnome/gconf/configure.in,v
retrieving revision 1.53
diff -u -u -r1.53 configure.in
--- configure.in	2000/08/10 05:26:51	1.53
+++ configure.in	2000/08/30 19:47:10
@@ -111,9 +111,9 @@
         AC_FYI("Only building documentation")
 else
 
-AM_PATH_GLIB(1.2.0,,AC_MSG_ERROR(glib not found or too old),gmodule)
+AM_PATH_GLIB_2_0(1.3.0,,AC_MSG_ERROR(glib not found or too old),gmodule)
 AM_PATH_OAF(0.2.0,,AC_MSG_ERROR([OAF not found or too old]))
-AM_PATH_GTK(1.2.0,,HAVE_GTK=no)
+AM_PATH_GTK_2_0(1.3.0,,HAVE_GTK=no)
 
 AM_CONDITIONAL(GTK, test x$HAVE_GTK != xno)
 
Index: po/Makefile.in.in
===================================================================
RCS file: /cvs/gnome/gconf/po/Makefile.in.in,v
retrieving revision 1.1
diff -u -u -r1.1 Makefile.in.in
--- po/Makefile.in.in	1999/07/22 20:20:02	1.1
+++ po/Makefile.in.in	2000/08/30 19:47:10
@@ -62,7 +62,7 @@
 	$(COMPILE) $<
 
 .po.pox:
-	$(MAKE) $(PACKAGE).pot
+	$(MAKE) $(srcdir)/$(PACKAGE).pot
 	$(MSGMERGE) $< $(srcdir)/$(PACKAGE).pot -o $*.pox
 
 .po.mo:
@@ -79,7 +79,7 @@
 
 all: all-@USE_NLS@
 
-all-yes: cat-id-tbl.c $(CATALOGS)
+all-yes: $(srcdir)/cat-id-tbl.c $(CATALOGS)
 all-no:
 
 $(srcdir)/$(PACKAGE).pot: $(POTFILES)
@@ -90,8 +90,8 @@
 	   || ( rm -f $(srcdir)/$(PACKAGE).pot \
 		&& mv $(PACKAGE).po $(srcdir)/$(PACKAGE).pot )
 
-$(srcdir)/cat-id-tbl.c: stamp-cat-id; @:
-$(srcdir)/stamp-cat-id: $(PACKAGE).pot
+$(srcdir)/cat-id-tbl.c: $(srcdir)/stamp-cat-id; @:
+$(srcdir)/stamp-cat-id: $(srcdir)/$(PACKAGE).pot
 	rm -f cat-id-tbl.tmp
 	sed -f ../intl/po2tbl.sed $(srcdir)/$(PACKAGE).pot \
 		| sed -e "s/@PACKAGE NAME@/$(PACKAGE)/" > cat-id-tbl.tmp
@@ -180,7 +180,8 @@
 
 check: all
 
-cat-id-tbl.o: ../intl/libgettext.h
+cat-id-tbl.o: $(srcdir)/cat-id-tbl.c $(top_srcdir)/intl/libgettext.h
+	$(COMPILE) $(srcdir)/cat-id-tbl.c
 
 dvi info tags TAGS ID:
 
@@ -196,7 +197,7 @@
 maintainer-clean: distclean
 	@echo "This command is intended for maintainers to use;"
 	@echo "it deletes files that may require special tools to rebuild."
-	rm -f $(GMOFILES)
+	rm -f $(GMOFILES) cat-id-tbl.c stamp-cat-id
 
 distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)
 dist distdir: update-po $(DISTFILES)
@@ -207,7 +208,7 @@
 	done
 
 update-po: Makefile
-	$(MAKE) $(PACKAGE).pot
+	$(MAKE) $(srcdir)/$(PACKAGE).pot
 	PATH=`pwd`/../src:$$PATH; \
 	cd $(srcdir); \
 	catalogs='$(CATALOGS)'; \
Index: wrappers/gtk/gconf-client.c
===================================================================
RCS file: /cvs/gnome/gconf/wrappers/gtk/gconf-client.c,v
retrieving revision 1.27
diff -u -u -r1.27 gconf-client.c
--- wrappers/gtk/gconf-client.c	2000/07/26 06:52:52	1.27
+++ wrappers/gtk/gconf-client.c	2000/08/30 19:47:12
@@ -122,7 +122,7 @@
 static void gconf_client_real_unreturned_error (GConfClient* client, GConfError* error);
 static void gconf_client_real_error            (GConfClient* client, GConfError* error);
 static void gconf_client_destroy               (GtkObject* object); 
-static void gconf_client_finalize              (GtkObject* object); 
+static void gconf_client_finalize              (GObject* object); 
 
 static void gconf_client_cache                 (GConfClient* client,
                                                 const gchar* key,
@@ -171,15 +171,17 @@
 gconf_client_class_init (GConfClientClass *class)
 {
   GtkObjectClass *object_class;
+  GObjectClass *gobject_class;
 
   object_class = (GtkObjectClass*) class;
+  gobject_class = (GObjectClass*) class;
 
   parent_class = gtk_type_class (gtk_object_get_type ());
   
   client_signals[VALUE_CHANGED] =
     gtk_signal_new ("value_changed",
                     GTK_RUN_LAST,
-                    object_class->type,
+                    GTK_CLASS_TYPE (object_class),
                     GTK_SIGNAL_OFFSET (GConfClientClass, value_changed),
                     gtk_marshal_NONE__POINTER_POINTER,
                     GTK_TYPE_NONE, 2, GTK_TYPE_POINTER, GTK_TYPE_POINTER);
@@ -187,7 +189,7 @@
   client_signals[UNRETURNED_ERROR] =
     gtk_signal_new ("unreturned_error",
                     GTK_RUN_LAST,
-                    object_class->type,
+                    GTK_CLASS_TYPE (object_class),
                     GTK_SIGNAL_OFFSET (GConfClientClass, unreturned_error),
                     gtk_marshal_NONE__POINTER,
                     GTK_TYPE_NONE, 1, GTK_TYPE_POINTER);
@@ -195,7 +197,7 @@
   client_signals[ERROR] =
     gtk_signal_new ("error",
                     GTK_RUN_LAST,
-                    object_class->type,
+                    GTK_CLASS_TYPE (object_class),
                     GTK_SIGNAL_OFFSET (GConfClientClass, error),
                     gtk_marshal_NONE__POINTER,
                     GTK_TYPE_NONE, 1, GTK_TYPE_POINTER);
@@ -207,7 +209,7 @@
   class->error            = gconf_client_real_error;
 
   object_class->destroy   = gconf_client_destroy;
-  object_class->finalize  = gconf_client_finalize;
+  gobject_class->finalize  = gconf_client_finalize;
 }
 
 static void
@@ -253,7 +255,7 @@
 }
 
 static void
-gconf_client_finalize (GtkObject* object)
+gconf_client_finalize (GObject* object)
 {
   GConfClient* client = GCONF_CLIENT(object);
   
@@ -277,8 +279,8 @@
       client->engine = NULL;
     }
 
-  if (parent_class->finalize)
-    (*parent_class->finalize)(object);
+  if (G_OBJECT_CLASS (parent_class)->finalize)
+    (* G_OBJECT_CLASS (parent_class)->finalize) (object);
 }
 
 /*
