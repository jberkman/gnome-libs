dnl
dnl Configure script for the Gnome library
dnl

AC_INIT(gnome.h)
AM_CONFIG_HEADER(config.h)

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(gnome-libs, 1.95.0)

if test -z "$CERTIFIED_GNOMIE"; then
  cat $srcdir/message-of-doom
  exit 1
fi

AC_CACHE_VAL(ac_cv_gnome2_dir, ac_cv_gnome2_dir="$GNOME2_DIR")

if test ! -z "$ac_cv_gnome2_dir" ; then
  LD_LIBRARY_PATH="$ac_cv_gnome2_dir/lib:$LD_LIBRARY_PATH"
  export LD_LIBRARY_PATH
fi

GNOME_COMMON_INIT
GNOME_PLATFORM_GNOME_2(yes, force)

AC_CONFIG_SUBDIRS(gnome-faq)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM

AM_PROG_LIBTOOL

AM_MAINTAINER_MODE

dnl
dnl let applications configure for gnome
dnl
gnome_cv_use_gnome=yes

GNOME_COMPILE_WARNINGS(maximum)

GNOME2_X_CHECKS

GNOME_PKGCONFIG_CHECK_MODULES(GNOMESUPPORT, gnome-support-2.0:1.2.1)
AC_SUBST(GNOMESUPPORT_CFLAGS)
AC_SUBST(GNOMESUPPORT_LIBS)

AC_FUNC_ALLOCA
if test $ac_cv_header_alloca_h = yes; then
	GNOME_HAVE_ALLOCA_H=1
else
	GNOME_HAVE_ALLOCA_H=0
fi

AC_SUBST(GNOME_HAVE_ALLOCA_H)

GNOME2_X_CHECKS

GNOME_PKGCONFIG_CHECK_MODULES(GLIB, glib-2.0:1.3.1)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

dnl This is installed from GTK+ 2.0's gdk-pixbuf
AC_PATH_PROG(MAKE_INLINE_PIXBUF, make-inline-pixbuf)
test -z "$MAKE_INLINE_PIXBUF" && AC_MSG_ERROR([
*** You need the make-inline-pixbuf tool which is installed
*** from GTK+ 2.0's gdk-pixbuf.
***
*** Either the location where you installed your GTK+ 2.0 is
*** not in your PATH or something is screwed up with your
*** GTK+ 2.0 installation
])

# define a MAINT-like variable REBUILD which is set if Perl
# and awk are found, so autogenerated sources can be rebuilt

AC_PROG_AWK
AC_CHECK_PROGS(PERL, perl5 perl)

# We would like indent, but don't require it.
AC_CHECK_PROG(INDENT, indent, indent)

_found_perl=0
if test -n "$PERL" && $PERL -v | grep 'version 5.' > /dev/null ; then
  _found_perl=1
else
  # The version string for perl changed for 'version 5' to 'v5' in
  # perl 5.6 or therabouts
  if test -n "$PERL" && $PERL -v | grep 'v5.' > /dev/null ; then
    _found_perl=1
  fi
fi

REBUILD=\#
if test $_found_perl -eq 1; then
  if test -n "$AWK" ; then 
    REBUILD=
  fi
fi
AC_SUBST(REBUILD)

dnl Utility conditional
AM_CONDITIONAL(FALSE, test x = y)

dnl Check for gtk-doc and add the --enable-gtk-doc switch.
GNOME_GTKDOC_CHECK

dnl Define GNOME_ENABLE_DEBUG if the --enable-debug switch was given.
GNOME_DEBUG_CHECK

ALL_LINGUAS="az ca cs da de el en_GB es et eu fi fr ga gl hr hu it ja ko lt nl no pl pt pt_BR ro ru sk sl sp sr sv tr uk wa zh_TW.Big5 zh_CN.GB2312"
	
AM_GNOME2_GETTEXT
# AM_GNOME2_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

AC_CHECK_LIB(m, floor)

AC_CHECK_LIB(popt, poptStrippedArgv,, AC_MSG_ERROR([popt 1.5 or newer is required to build
gnome-libs. You can download the latest version from ftp://people.redhat.com/sopwith/popt/]))

AC_CHECK_HEADERS(dlfcn.h dl.h utmp.h locale.h mcheck.h unistd.h)

DL_LIB=
AC_CHECK_FUNCS(dlopen,,[
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl",[
AC_CHECK_LIB(dld, shl_load, DL_LIB="-ldld",[
AC_CHECK_FUNCS(dlopen, DL_LIB="",
AC_MSG_ERROR(Dynamic linking is not available on this platform.  Some apps,
like panel, will not run properly.))
])])])
oLIBS="$LIBS"
LIBS="$LIBS $DL_LIB"
AC_CHECK_FUNCS(dlerror,,)
LIBS="$oLIBS"
AC_SUBST(DL_LIB)

AC_CHECK_FUNCS(strerror gethostbyname setfsgid setenv putenv strdup)

NSL_LIBS=""
if test $ac_cv_func_gethostbyname = no; then
  AC_CHECK_LIB(nsl,gethostbyname,NSL_LIBS=-lnsl)
fi
AC_SUBST(NSL_LIBS)
AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton)])

dnl libgtkxmhtml enables a workaround if this isn't present
xLIBS="$LIBS"
LIBS="$GTK_LIBS $X_LIBS $x_libs $LIBS"
AC_CHECK_FUNCS(gtk_signal_handler_pending)
LIBS="$xLIBS"

dnl
dnl zvt checks
dnl
AC_CHECK_HEADERS(sys/select.h sys/time.h sys/un.h paths.h sys/syslimits.h sys/fsuid.h)

dnl
dnl check for -D_SOCKADDR_LEN, which is required on Tru64 UNIX
dnl
AC_MSG_CHECKING([for sa_len in struct sockaddr])
AC_TRY_COMPILE(
    [#include <sys/socket.h>],
    [struct sockaddr s; s.sa_len;],
    [sa_len_ok=yes],
    [sa_len_ok=no])
AC_MSG_RESULT($sa_len_ok)
if test x$sa_len_ok = xno; then
    AC_MSG_CHECKING([for sa_len with -D_SOCKADDR_LEN])
    xCPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS -D_SOCKADDR_LEN"
    AC_TRY_COMPILE(
	[#include <sys/socket.h>],
	[struct sockaddr s; s.sa_len;],
	[AC_DEFINE(_SOCKADDR_LEN)
	 sa_len_ok=yes],
	[sa_len_ok=no])
    CPPFLAGS="$xCPPFLAGS"
fi
AC_MSG_RESULT($sa_len_ok)

dnl
dnl gnome-pty-support checks
dnl

AC_MSG_CHECKING([for Unix98 sendmsg])
AC_TRY_LINK([
#include <stdio.h>
#include <sys/types.h>
#include <sys/socket.h>
],[
struct msghdr hdr;
hdr.msg_control = NULL;
hdr.msg_controllen = 0;
sendmsg (0, &hdr, 0);
],[
AC_DEFINE(HAVE_SENDMSG)
AC_MSG_RESULT(yes)],[AC_MSG_RESULT(no)])

AC_CHECK_UTMP

AC_CHECK_HEADERS(pty.h util.h libutil.h ttyent.h)

AC_CHECK_LIB(util, openpty,
    [
    AC_CHECK_LIB(util, login_tty, [AC_DEFINE(HAVE_LOGIN_TTY)])
    AC_DEFINE(HAVE_OPENPTY)
    AC_DEFINE(HAVE_LIBUTIL)
    UTIL_LIBS="-lutil"
    AC_SUBST(UTIL_LIBS)
    ])

AC_CHECK_FUNCS(grantpt utmpxname utmpname getutmpx getutent getttyent)
AC_CHECK_FUNCS(updwtmpx updwtmp fcntl flock strrchr seteuid)

AC_CHECK_HEADER(stropts.h, AC_DEFINE(HAVE_STROPTS_H))
AC_CHECK_HEADER(dlfcn.h, AC_DEFINE(HAVE_DLFCN_H))

dnl And workaround for a Autoconf 2.4 bug:
if test x$ac_cv_func_grantpt = xyes; then
    :
else
    AC_CHECK_LIB(pt, grantpt)
fi

dnl Tests to support libvfs.
AC_CHECK_FUNCS(strdup)
AC_CHECK_HEADERS(utime.h)
AC_FUNC_MMAP
AC_CHECK_TYPE(umode_t, int)

AC_ARG_ENABLE(prefer-db1, [  --enable-prefer-db1     Prefer Berkeley DB 1.x],[prefer_db1="$enableval"],[prefer_db1=yes])
dnl
dnl Check for db stuff (gnome-metadata)
dnl
DB_LIB=
AC_CHECK_FUNC(dbopen, [],
if test "$prefer_db1" = "yes"; then
 AC_CHECK_LIB(db1, dbopen, DB_LIB="-ldb1",
  AC_CHECK_LIB(db, dbopen, DB_LIB="-ldb",
   AC_MSG_ERROR([Your db library is missing db 1.85 compatibility mode])
  )
 )
else
 AC_CHECK_LIB(db, dbopen, DB_LIB="-ldb",
  AC_CHECK_LIB(db1, dbopen, DB_LIB="-ldb1",
   AC_MSG_ERROR([Your db library is missing db 1.85 compatibility mode])
  )
 )
fi
)

dnl look for db headers
if test "$prefer_db1" = "yes"; then
	AC_CHECK_HEADERS(db_185.h db1/db.h)
	if test "$ac_cv_header_db_185_h$ac_cv_header_db1_db_h" = nono; then
	  AC_MSG_ERROR([Berkeley db library required for Gnome])
	fi
	AC_DEFINE(PREFER_DB1)
else
	AC_CHECK_HEADERS(db.h db_185.h db1/db.h)

	if test "$ac_cv_header_db_h$ac_cv_header_db_185_h$ac_cv_header_db1_db_h" = nonono; then
	  AC_MSG_ERROR([Berkeley db library required for Gnome])
	fi
fi

dnl
dnl ORBit check
dnl
GNOME_PKGCONFIG_CHECK_MODULES(ORBIT, ORBit-2.0:0.5.1)
AC_SUBST(ORBIT_CFLAGS)
AC_SUBST(ORBIT_LIBS)

dnl
dnl OAF check
dnl
GNOME_PKGCONFIG_CHECK_MODULES(OAF, oaf-2.0)
AC_SUBST(OAF_CFLAGS)
AC_SUBST(OAF_LIBS)

dnl
dnl GConf check
dnl
GNOME_PKGCONFIG_CHECK_MODULES(GCONF, gconfgtk-2.0)
AC_SUBST(GCONF_CFLAGS)
AC_SUBST(GCONF_LIBS)

dnl
dnl Libart check
dnl
GNOME_PKGCONFIG_CHECK_MODULES(LIBART, libart-2.0:2.1.0)
AC_SUBST(LIBART_CFLAGS)
AC_SUBST(LIBART_LIBS)


dnl
dnl This is needed for the gnome-moz-remote program.  It doesn't use GDK,
dnl since some of the code in it was written before GDK existed.
dnl
AC_PATH_X
AC_PATH_XTRA

dnl
dnl Check for gnome-vfs
dnl
GNOME_PKGCONFIG_CHECK_MODULES(GNOME_VFS, gnomevfs-2.0)
GNOME_VFS_VERSION=`$PKG_CONFIG --modversion gnomevfs-2.0`
AC_SUBST(GNOME_VFS_VERSION)
AC_SUBST(GNOME_VFS_CFLAGS)
AC_SUBST(GNOME_VFS_LIBS)

dnl
dnl These are for building the appropriate lib*
dnl
LIBGNOME_LIBS="$DB_LIB $GLIB_LIBS $DL_LIB $GNOME_VFS_LIBS -lpopt"
LIBGNOMEUI_LIBS="$LIBGNOME_LIBS $GTK_LIBS $OAF_LIBS"
LIBGTKXMHTML_LIBS="$XPM_LIBS $JPEG_LIBS $PNG_LIBS $Z_LIBS $GTK_LIBS"

dnl These are for using lib*
GNOME_LIBS="-lgnome-$GNOME_INTERFACE_VERSION $LIBGNOME_LIBS"
GNOMEUI_LIBS="-lgnomeui-$GNOME_INTERFACE_VERSION $OAF_LIBS $ORBIT_LIBS $LIBART_LIBS $GTK_LIBS $GNOME_LIBS"

GTKXMHTML_LIBS="-lgtkxmhtml $LIBGTKXMHTML_LIBS"
ZVT_LIBS="-lzvt-$GNOME_INTERFACE_VERSION $GTK_LIBS $UTIL_LIBS $GTK_LIBS"

dnl These definitions are expanded in make and gnome-config
GNOME_LIBDIR='-L${libdir}'
GNOME_INCLUDEDIR='-I${includedir}/gnome/${GNOME_INTERFACE_VERSION}'
GNOME_IDLDIR='-I${datadir}/idl'

dnl
dnl test-gnome
dnl

AC_ARG_ENABLE(test-gnome, [  --enable-test-gnome     compile the test-gnome examples [default=yes]],[compile_test_gnome="$enableval"],[compile_test_gnome=yes])
AM_CONDITIONAL(COMPILE_TEST_GNOME, test x$compile_test_gnome = xyes)


dnl
dnl Compat libs
dnl

AC_ARG_ENABLE(gnome-compat, [  --enable-gnome-compat     compile the compatability library for gnome-1.0 [default=no]],[compile_gnome_compat="$enableval"],[compile_gnome_compat=no])
AM_CONDITIONAL(COMPILE_GNOME_COMPAT, test x$compile_gnome_compat = xyes)


dnl (now unused) hack to let people use lclint
dnl if test -f $srcdir/.lclintrc.in; then
dnl 	LCLINTRC_OUT=.lclintrc
dnl 	LINT_TOP_BUILDDIR=`pwd`
dnl 	LINT_TOP_SRCDIR=`pwd`/$srcdir
dnl 	AC_SUBST(LINT_TOP_BUILDDIR)
dnl 	AC_SUBST(LINT_TOP_SRCDIR)
dnl 	ln -sf `pwd`/.lclintrc $srcdir/.lclintrc
dnl 	mkdir -p $srcdir/libgnome $srcdir/libgnomeui
dnl 	ln -sf `pwd`/.lclintrc $srcdir/libgnome/.lclintrc
dnl 	ln -sf `pwd`/.lclintrc $srcdir/libgnomeui/.lclintrc
dnl fi

dnl
dnl GNOME libs Documentation
dnl 
GNOME_LIBS_DIR=`(cd $srcdir; pwd)`
AC_SUBST(GNOME_LIBS_DIR)

AM_CONDITIONAL(INSIDE_GNOME_DOCU, false)

dnl
dnl Substitutions
dnl

AC_SUBST(GTK_LIBS)
AC_SUBST(GNOME_LIBS)
AC_SUBST(GNOMEUI_LIBS)
AC_SUBST(ZVT_LIBS)
AC_SUBST(GTKXMHTML_LIBS)
AC_SUBST(GNOME_LIBDIR)
AC_SUBST(GNOME_INCLUDEDIR)
AC_SUBST(GNOME_IDLDIR)

AC_SUBST(LIBGNOME_LIBS)
AC_SUBST(LIBGNOMEUI_LIBS)
AC_SUBST(LIBGTKXMHTML_LIBS)

dnl
dnl List of files to create
dnl
AC_OUTPUT([
gnome-bug
gnome-config
gnome-libs.spec
Makefile
po/Makefile.in
intl/Makefile
images/Makefile
idl/Makefile
libgnome/Makefile
libgnome/gnome-portability.h
libgnomeui/Makefile
libgnomeui/pixmaps/Makefile
libcompat/Makefile
zvt/Makefile
test-suite/Makefile
test-suite/tests/Makefile
gnome-data/Makefile
test-gnome/Makefile
devel-docs/Makefile
devel-docs/gnome/Makefile
devel-docs/gnome-dev-info/Makefile
devel-docs/gnomeui/Makefile
devel-docs/templates/Makefile
devel-docs/ui-guide/Makefile
devel-docs/gnome-libs-tutorial/Makefile
man/Makefile
man/gnome-mime.5
devel-docs/zvt/Makefile
tools/Makefile
tools/gnome-doc/Makefile
],[case "$CONFIG_FILES" in
*gnome-config*)chmod +x gnome-config;;
esac

echo ""
echo " *** IMPORTANT *** "
echo ""
echo "This is a development version of gnome-libs.  You should be using a stable"
echo "version, which is available at ftp://ftp.gnome.org/pub/GNOME/sources/gnome-libs/"
echo "The version you just configured is meant for developers of gnome-libs only:"
echo ""
echo "  * You should not base ANY software on this version of gnome-libs."
echo ""
echo "Distributions should *NOT* ship a development package of this gnome-libs."
echo "Do not ship the headers and do not ship the gnome-config script. These"
echo "things will conflict with the stable 1.0 series.  Package only enough"
echo "to satisfy the requirements of some other package.  Package only the"
echo "library itself.  Doing otherwise will do no favors to the community."
echo ""
echo "If you install this version of gnome-libs, we strongly recommend that you"
echo "install it in a different prefix than gnome-libs 1.0.  Use --prefix as an"
echo "argument to configure to do this.  Otherwise, you will not be able to"
echo "do development with gnome-libs 1.0 any longer."
echo ""
echo " *** You should be using gnome-libs 1.0 instead. ***"
echo ""
echo "If you are using this source tree from CVS, please run:"
echo "	cvs update -r gnome-libs-1-0"
echo "now."
])

dnl ############## Graveyard for temporarily-unused macros
dnl
dnl Check for esound library
dnl
dnl AM_PATH_ESD(0.2.5, AC_DEFINE(HAVE_ESD))

dnl
dnl Check for audiofile library
dnl
dnl AM_PATH_AUDIOFILE(0.1.5,AC_DEFINE(HAVE_LIBAUDIOFILE))
