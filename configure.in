dnl
dnl Configure script for the Gnome library
dnl

AC_INIT(gnome.h)
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(gnome-libs, 0.13)

AM_MAINTAINER_MODE

AM_ACLOCAL_INCLUDE(macros)

dnl
dnl let applications configure for gnome
dnl
gnome_cv_use_gnome=yes

AC_ISC_POSIX
AC_PROG_CC
AC_HEADER_STDC
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
GNOME_X_CHECKS
GNOME_SUPPORT_CHECKS

AC_ARG_ENABLE(debug, [  --enable-debug turn on debugging [default=no]],AC_DEFINE(GNOME_ENABLE_DEBUG),)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

ALL_LINGUAS="de fr it ko cs"
AM_GNU_GETTEXT
AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)

AC_CHECK_LIB(m, main)

AC_CHECK_HEADERS(dlfcn.h dl.h)
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl",[
AC_CHECK_LIB(dld, shl_load, DL_LIB="-ldld",[
AC_CHECK_FUNCS(dlopen, DL_LIB="",
AC_MSG_ERROR(Dynamic linking is not available on this platform.  Some apps,
like panel, will not run properly.))
])])
AC_CHECK_FUNCS(dlerror,,)
AC_SUBST(DL_LIB)

AC_CHECK_FUNCS(strerror gethostbyname setfsgid)
NSL_LIBS=""
if test $ac_cv_func_gethostbyname = no; then
  AC_CHECK_LIB(nsl,gethostbyname,NSL_LIBS=-lnsl)
fi
AC_SUBST(NSL_LIBS)

dnl libgtkxmhtml enables a workaround if this isn't present
xLIBS="$LIBS"
LIBS="$LIBS $GTK_LIBS $X_LIBS $x_libs"
AC_CHECK_FUNCS(gtk_signal_handler_pending)
LIBS="$xLIBS"

dnl Image handling libraries
Z_LIBS= JPEG_LIBS= PNG_LIBS= TIFF_LIBS= GIF_LIBS= GDK_IMLIB_LIBS=
AC_CHECK_LIB(z, inflate, [Z_LIBS="-lz";  AC_DEFINE(HAVE_LIBZ)])
AC_CHECK_LIB(jpeg, jpeg_abort, [JPEG_LIBS="-ljpeg"; AC_DEFINE(HAVE_LIBJPEG)])
AC_CHECK_LIB(png, png_get_valid, [PNG_LIBS="-lpng"; AC_DEFINE(HAVE_LIBPNG)], , $Z_LIBS)
AC_CHECK_LIB(tiff, main, [TIFF_LIBS="-ltiff"; AC_DEFINE(HAVE_LIBTIFF)])
AC_CHECK_LIB(gif, main, [GIF_LIBS="-lgif"; AC_DEFINE(HAVE_LIBGIF)])
AC_CHECK_LIB(gdk_imlib, main, [
 GDK_IMLIB_LIBS="-lgdk_imlib $TIFF_LIBS $GIF_LIBS $JPEG_LIBS $PNG_LIBS $Z_LIBS"
],[
AC_MSG_ERROR(I could not find gdk_imlib, which is required by Gnome libs)
],$TIFF_LIBS $GIF_LIBS $JPEG_LIBS $PNG_LIBS $Z_LIBS $GTK_LIBS $X_LIBS $x_libs)

dnl These are for building the apporpriate lib*
LIBGNOME_LIBS="$DL_LIB"
LIBGNOMEUI_LIBS="$LIBGNOME_LIBS $GDK_IMLIB_LIBS $GTK_LIBS"
LIBGTKXMHTML_LIBS="$XPM_LIBS $JPEG_LIBS $PNG_LIBS $Z_LIBS $GTK_LIBS"
LIBSUPPORT=
SUPPORTINCS=
if test "$need_gnome_support" = yes; then
   LIBSUPPORT='$(top_builddir)/support/libgnomesupport.la'
   SUPPORTINCS='-DNEED_GNOMESUPPORT_H -I$(top_builddir)/support -I$(top_srcdir)/support'
fi

dnl These are for using lib*
if test "$need_gnome_support" = yes; then
   GNOME_LIBS="-lgnome -lgnomesupport $LIBGNOME_LIBS"
else
   GNOME_LIBS="-lgnome $LIBGNOME_LIBS"
fi
GNOMEUI_LIBS="-lgnomeui $GNOME_LIBS $GDK_IMLIB_LIBS $GTK_LIBS"
GTKXMHTML_LIBS="-lgtkxmhtml $LIBGTKXMHTML_LIBS"

dnl These definitions are expanded in make.
GNOME_LIBDIR='-L$(libdir)'
GNOME_INCLUDEDIR='-I$(includedir)'
if test "$need_gnome_support" = yes; then
   GNOME_INCLUDEDIR="$GNOME_INCLUDEDIR -DNEED_GNOMESUPPORT_H -I\$(pkglibdir)/include"
fi
AC_SUBST(GNOME_LIBS)
AC_SUBST(GNOMEUI_LIBS)
AC_SUBST(GTKXMHTML_LIBS)
AC_SUBST(GNOME_LIBDIR)
AC_SUBST(GNOME_INCLUDEDIR)

AC_SUBST(LIBSUPPORT)
AC_SUBST(SUPPORTINCS)

AC_SUBST(LIBGNOME_LIBS)
AC_SUBST(LIBGNOMEUI_LIBS)
AC_SUBST(LIBGTKXMHTML_LIBS)

AC_CONFIG_SUBDIRS(libgtktty)

AC_OUTPUT([
Makefile
po/Makefile.in
intl/Makefile
gtk-xmhtml/Makefile
libgnome/Makefile
libgnomeui/Makefile
rasterapi/Makefile
test-suite/Makefile
gnome-hello/Makefile
devel-docs/Makefile
support/Makefile
macros/Makefile],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])
