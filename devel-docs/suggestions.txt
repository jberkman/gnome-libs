
Suggestions for enhancing the user experience in your application:

Menus:
------

   - For standard menu items (Save, Save As, Close, Quit, etc), use
     the macros defined in gnome-app-helper.h, e.g.
     GNOMEUIINFO_MENU_EXIT_ITEM(cb, data)
     except for New where the define is:
     GNOMEUIINFO_MENU_NEW_ITEM(label,cb,data)
     you should put the label in the form of N_("_New Document"),
     replacing Document with whatever new thing you are adding

   - For some standard toplevel menus (File, Edit,Help,etc),
     you should use the macros GNOMEUIINFO_*_MENU(tree)

   - The order of the toplevel menus should be:
     File, <any mdi child menus>, Edit, View, Windows, Help
     Help should NOT be right aligned

   - The prescribed order of standard menu items in the "File" menu is
     the following:
     New, Open, Save, Save As, Revert, separator, Print, Print Setup,
     separator, Close, Exit

   - The prescribed order of standard menu items in the "Edit" menu is
     the following:  Undo, Redo, separator, Cut, Copy, Paste, Clear

   - For help menu, you should add the
     GNOMEUIINFO_HELP(app_name),
     first, and after that add the
     GNOMEUIINFO_MENU_ABOUT_ITEM(cb, data)
     

Dialogs
-------

   - GnomePropertyBox widgets for configuring things in your
     application.  These will allow the user to use their prefered way
     of configuring the application.

   - If you only want to ask the user a question from a set of
     options, you can use the gnome-messagebox code.

   - When creating dialog boxes, use a GnomeDialog widget, instead of
     a GtkWindow.

   - Use the gtk_dialog_set_parent routine if possible, to "bind" your
     dialog boxes to your main toplevel window (this allows window
     managers to hide all of your dialog box windows when minimizing
     your main window for example).

   - For file-input entry widgets, use the GnomeFileEntry widget, this
     will provde a browse selector (and in the future it will use the
     enhanced file open dialog box).

   - When you require an entry for typing in an icon name, use the
     GnomeIconEntry widget. 

   - For text-input that might benefit from a history, use the
     GnomeEntry widget (this will provide automatic history for you).

General Widget Use
------------------

   - Use the GnomeApp widget for your toplevel windows.

   - Use the gnome-app-helper.h interface for creating menus and
     toolbars.  If you use this, the task of creating Baboon-aware
     applications will be reduced.

   - Use GnomePixmap to load your images.

   - Try to use consistant spacing and padding everywhere.
     libgnomeui/gnome-uidefs.h has some preset values to use.

Miscellaneous
-------------

   - GNOME uses Imlib, try to provide your images in PNG format.  Do
     not care about the color usage, Imlib will dither to a nice

